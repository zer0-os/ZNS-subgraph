type Domain @entity {
  id: ID!
  parent: BigInt!
  depth: BigInt!
  controller: Bytes! #address
  creator: Bytes! #address
  name: String!
  domain: String!
  properties: String!
  lockableProperties: String!
  childCreateLimit: BigInt!
  childPropertiesRule: Int!
  childCount: BigInt!
  owner: Bytes! #address
  approval: Bytes
  timeCreated: Int!
}

type StakingDomainConfig @entity {
  id: ID! #tokenId
  stakeToken: Bytes! #address
  minBid: BigInt!
}

type Stake @entity {
  id: ID! #stakeHash
  status: String!
  parentId: BigInt! #address
  name: String!
  amount: BigInt!
  controller: Bytes! #address
  controllerData: Bytes!
  lockableProperties: String!
  stakeToken: Bytes! #address
  domain: String!
}

type DynamicToken @entity {
  id: ID!
  dsToken: Bytes! #address
  converter: Bytes! #address
}

type Transfer @entity {
  id: ID!
  domain: String!
  blockNumber: Int!
  transactionID: Bytes!
  owner: Bytes! #address
  from: Bytes! #address
  to: Bytes! #address
}
