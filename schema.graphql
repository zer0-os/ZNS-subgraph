

type Domain @entity {
  id: ID!
  name: String
  labelHash: String
  parent: Domain
  subdomains: [Domain!] @derivedFrom(field: "parent")
  owner: Account
  creator: Account
  lockedBy: Account
  isLocked: Boolean!
  metadata: String
  royaltyAmount: BigInt!
  blockNumber: Int!
  transactionID: Bytes!
  events: [DomainEvent!]! @derivedFrom(field: "domain")
}

interface DomainEvent {
  id: ID!
  domain: Domain!
  blockNumber: Int!
  transactionID: Bytes!
}

type DomainTransferred implements DomainEvent @entity {
  id: ID!
  domain: Domain!
  blockNumber: Int!
  transactionID: Bytes!
}

type Account @entity {
    id: ID!
    ownedDomains: [Domain!] @derivedFrom(field: "owner")
    createdDomains: [Domain!] @derivedFrom(field: "creator")
}
