

type Domain @entity {
  id: ID!
  name: String
  labelName: String
  labelHash: String
  parent: Domain
  subdomains: [Domain]! @derivedFrom(field: "parent")
  owner: Account
  creator: Account!
  transactionId: Bytes!
  events: [DomainEvent!]! @derivedFrom(field: "domain")
}
interface DomainEvent {
  id: ID!
  domain: Domain!
  blockNumber: Int!
  transactionId: Bytes!
}

type TransferEntity implements DomainEvent @entity {
  id: ID!
  domain: Domain!
  blockNumber: Int!
  transactionId: Bytes!
  owner: Account!
  events: [DomainEvent!]!
}

type Account @entity {
    id: ID!
    ownedDomains: [Domain]! @derivedFrom(field: "owner")
    createdDomains: [Domain]! @derivedFrom(field: "creator")
}
